ARG DISTRO_VERSION=20.04

ARG BUILD_BASE=ubuntu:${DISTRO_VERSION}
FROM ${BUILD_BASE} as base
ARG DISTRO_VERSION

# All build dependencies for vcpkg packages
# First row is build dependencies for lifting tools
# Second row is toolchain and build programs
# Third row is vcpkg library build-time dependencies
RUN export DEBIAN_FRONTEND=noninteractive && \
    if [ "$(uname -m)" = "aarch64" ]; then dpkg --add-architecture armhf; fi && \
    apt-get update && apt-get install --yes apt-utils && apt-get upgrade --yes && \
    apt-get install --yes --no-install-recommends apt-transport-https software-properties-common gnupg ca-certificates wget && \
    apt-add-repository ppa:git-core/ppa --yes && \
    wget "https://github.com/Kitware/CMake/releases/download/v3.19.3/cmake-3.19.3-Linux-$(uname -m).sh" && \
    /bin/bash cmake-*.sh --skip-license --prefix=/usr/local && rm cmake-*.sh && \
    apt-get update && \
    apt-get install --yes --no-install-recommends \
      "$( [ "$(uname -m)" != "aarch64" ] && echo "g++-multilib")" \
      "$( [ "$(uname -m)" = "aarch64" ] && echo "libstdc++-*-dev:armhf")" \
      libtinfo-dev libzstd-dev python3.8 python3-pip python3-setuptools python-setuptools \
      build-essential g++ gcc clang-10 lld-10 ninja-build \
      curl unzip tar git zip python python3 pkg-config && \
    apt-get clean --yes && \
    rm -rf /var/lib/apt/lists/* && \
    \
    cd ~ && mkdir build && cd build && \
    curl -s  https://api.github.com/repos/ccache/ccache/releases/latest | grep tarball_url | cut -d '"' -f 4 | wget -i- -O - | tar -xz && \
    cd ccache-ccache-* && \
    cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release && \
    cmake --build build --target install && \
    cd .. && rm -rf ccache-ccache-*

ENV CC=/usr/bin/clang-10 \
    CXX=/usr/bin/clang++-10


# Much heavier installation due to mono dependency for NuGet
FROM base as caching
ARG DISTRO_VERSION
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && \
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \
    \
    if [ ${DISTRO_VERSION} = "20.04" ] ; then \
      echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | tee /etc/apt/sources.list.d/mono-official-stable.list ; \
    elif [ ${DISTRO_VERSION} = "18.04" ] ; then \
      echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | tee /etc/apt/sources.list.d/mono-official-stable.list ; \
    fi && \
    \
    apt-get update && \
    apt-get install --yes mono-devel && \
    apt-get clean --yes && \
    rm -rf /var/lib/apt/lists/*

# Only build base by default
FROM base
