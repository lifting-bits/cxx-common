name: Docker Build Images

on:
  schedule:
    # Once every Wednesday at 00:00
    - cron: '0 0 * * 3'
  push:
    branches:
      - master
    paths:
      - 'docker/**'
      - '.github/workflows/vcpkg_docker.yml'
  pull_request:
    paths:
      - 'docker/**'
      - '.github/workflows/vcpkg_docker.yml'


jobs:
  cleanup:
    runs-on: ['self-hosted', 'Linux', 'ARM64']
    container:
      image: ubuntu:latest
    steps:
      - name: Cleaning up the $GITHUB_WORKSPACE as root from a Docker image
        # Volume auto mounted by gh actions pointing to the current working-directory
        run: find ${{ github.workspace }}/. -name . -o -prune -exec rm -rf -- {} + || true
  build:
    strategy:
      fail-fast: false
      matrix:
        # arch is to tag docker images for uniqueness
        host:
          - { name: 'ubuntu-20.04', arch: '' }
          - { name: ['self-hosted', 'Linux', 'ARM64'], arch: '_arm64' }
        container:
          - { distro: 'ubuntu', version: '18.04' }
          - { distro: 'ubuntu', version: '20.04' }

    runs-on: ${{ matrix.host.name }}

    steps:
      - uses: actions/checkout@v2
      - name: Build and Push
        working-directory: docker
        run: |
          # Pull freshest ubuntu Docker image
          docker pull ubuntu:${{ matrix.container.version}}

          docker build -f Dockerfile.ubuntu.vcpkg --target caching --no-cache --build-arg "DISTRO_VERSION=${{ matrix.container.version }}" -t "${DOCKER_IMAGEID}" .
          # Docker image with NuGet support goes to github packages for CI use only
          #if [[ "${GITHUB_REF}" == "refs/heads/master" ]] ; then
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          for i in 1 2 3; do docker push "${DOCKER_IMAGEID}" && break || sleep 10; done
          #fi

          # NOTE: Docker Hub only allows one slash in tag
          docker build -f Dockerfile.ubuntu.vcpkg --target base --build-arg "DISTRO_VERSION=${{ matrix.container.version }}" -t "trailofbits/cxx-common-vcpkg-builder-${{ matrix.container.distro }}:${{ matrix.container.version }}" .
          # Smaller Docker image without NuGet support goes to Docker Hub for users
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]] ; then
            docker login -u "${DOCKER_HUB_USER}" -p "${DOCKER_HUB_TOKEN}"
            for i in 1 2 3; do docker push "trailofbits/cxx-common-vcpkg-builder-${{ matrix.container.distro }}:${{ matrix.container.version }}" && break || sleep 10; done
          fi
        env:
          DOCKER_IMAGEID: ghcr.io/trailofbits/cxx-common/vcpkg-builder-${{ matrix.container.distro }}:${{ matrix.container.version }}${{ matrix.host.arch }}
          DOCKER_HUB_USER: ${{  secrets.DOCKER_HUB_USER  }}
          DOCKER_HUB_TOKEN: ${{  secrets.DOCKER_HUB_TOKEN  }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1.0.3

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2.2.1
      #   with:
      #     file: ./docker/Dockerfile.${{ matrix.container.distro }}.vcpkg
      #     target: caching
      #     context: ./docker
      #     push: true
      #     tags: ghcr.io/trailofbits/cxx-common/vcpkg-builder-${{ matrix.container.distro }}:${{ matrix.container.version }}
      #     build-args: DISTRO_VERSION=${{ matrix.container.version }}
