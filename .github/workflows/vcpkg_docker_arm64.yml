name: Docker Build Images (ARM64)

on:
  schedule:
    # Once every Wednesday at 00:00
    - cron: '0 0 * * 3'
  push:
    branches:
      - master
    paths:
      - 'docker/**'
      - '.github/workflows/vcpkg_docker_arm64.yml'
  pull_request:
    paths:
      - 'docker/**'
      - '.github/workflows/vcpkg_docker_arm64.yml'


jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ec2:
          - { ami: ami-0128e20cf90406205, instance-type: r6g.8xlarge}
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GHA_PAT }}
          ec2-image-id: ${{ matrix.ec2.ami }}
          ec2-instance-type: ${{ matrix.ec2.instance-type }}
          subnet-id: subnet-0deb935f0bbfe1a5d
          security-group-id: sg-0f6a02eb80fafb982
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]

  do-the-job:
    strategy:
      fail-fast: false
      matrix:
        host:
          - { name: 'ubuntu-20.04', arch: 'arm64', triplet: 'arm64-linux-rel', arch_docker: '_arm64' }
        container:
          - { distro: 'ubuntu', version: '20.04', codename: 'focal' }
          - { distro: 'ubuntu', version: '22.04', codename: 'jammy' }
        llvm: [ 'llvm-13' ]

    name: Do the job on the runner
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner

    steps:
      - name: Cleanup working directory with container root
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace ubuntu:latest find . -name . -o -prune -exec rm -rf -- {} + || true
      - uses: actions/checkout@v3
      - name: Build and Push
        working-directory: docker
        run: |
          # Pull freshest ubuntu Docker image
          docker pull ubuntu:${{ matrix.container.version}}

          docker build -f Dockerfile.ubuntu.vcpkg --target caching --no-cache --build-arg "DISTRO_VERSION=${{ matrix.container.codename }}" -t "docker.pkg.github.com/${DOCKER_TAG}" .
          # Docker image with NuGet support goes to github packages for CI use only
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]] ; then
            docker login docker.pkg.github.com -u publisher -p "${GITHUB_PACKAGE_REGISTRY_TOKEN}"
            for i in 1 2 3; do docker push "docker.pkg.github.com/${DOCKER_TAG}" && break || sleep 10; done
          fi

          # NOTE: Docker Hub only allows one slash in tag
          docker build -f Dockerfile.ubuntu.vcpkg --target base --build-arg "DISTRO_VERSION=${{ matrix.container.codename }}" -t "trailofbits/cxx-common-vcpkg-builder-${{ matrix.container.distro }}:${{ matrix.container.version }}${{ matrix.host.arch_docker }}" .
          # Smaller Docker image without NuGet support goes to Docker Hub for users
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]] ; then
            docker login -u "${DOCKER_HUB_USER}" -p "${DOCKER_HUB_TOKEN}"
            for i in 1 2 3; do docker push "trailofbits/cxx-common-vcpkg-builder-${{ matrix.container.distro }}:${{ matrix.container.version }}${{ matrix.host.arch_docker }}" && break || sleep 10; done
          fi
        env:
          DOCKER_TAG: lifting-bits/cxx-common/vcpkg-builder-${{ matrix.container.distro }}:${{ matrix.container.version }}${{ matrix.host.arch_docker }}
          GITHUB_PACKAGE_REGISTRY_TOKEN: ${{  secrets.GITHUB_PACKAGE_REGISTRY_TOKEN  }}
          DOCKER_HUB_USER: ${{  secrets.DOCKER_HUB_USER  }}
          DOCKER_HUB_TOKEN: ${{  secrets.DOCKER_HUB_TOKEN  }}

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - do-the-job # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GHA_PAT }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
